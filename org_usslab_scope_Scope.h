/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <windows.h>
#include <visa.h>
#include <cstdint>
/* Header for class org_usslab_scope_Scope */

#ifndef _Included_org_usslab_scope_Scope
#define _Included_org_usslab_scope_Scope
#ifdef __cplusplus
extern "C" {
#endif

// Function
#define DLL_NAME "visa32.dll"
#define FUN_NAME_VI_OPEN_DEFAULT_RM "viOpenDefaultRM"
#define FUN_NAME_VI_OPEN "viOpen"
#define FUN_NAME_VI_CLOSE "viClose"
#define FUN_NAME_VI_PRINTF "viPrintf"
#define FUN_NAME_VI_READ "viRead"


// Status
#define SCOPE_NOT_INITIALIZED 0
#define SCOPE_INITIALIZED 1

// Error
#define SCOPE_SUCCESS 0
#define SCOPE_ERR_DLL_NOT_FOUND 1
#define SCOPE_ERR_FUN_NOT_FOUND 2
#define SCOPE_ERR_CONNECTION 3

#define BUFFER_SIZE 2048
#define SCOPE_TIMEOUT_MS 1000
#define DATA_STEP 40
#define DATA_SIZE 1400
#define HEADER_BIT_SIZE 11
#define CODE_BITS 10
#define BYTE_READ 1412
#define SCOPE_CONNECTION_STRING_USB "USB0::0x1AB1::0x04B1::DS4B135000045::INSTR"
#define SCOPE_CONNECTION_STRING_TCPIP "TCPIP::10.110.54.7::INSTR"

// Decode
#define CODE_T1 0x0000000700000007ULL
#define CODE_T1_VALUE CODE_T1
#define CODE_T2 (0x3FULL << 29)
#define CODE_T2_VALUE (0x3AULL << 29)
#define CODE_T2_SHIFT 7
#define CODE_T2_SELECTOR (0x03FFFFFULL << CODE_T2_SHIFT)
#define CODE_T3 (0x3FULL << 28)
#define CODE_T3_VALUE (0x3AULL << 28)
#define CODE_T3_SHIFT 6
#define CODE_T3_SELECTOR (0x03FFFFFULL << CODE_T3_SHIFT)
#define CODE_T4 (0x3FULL << 27)
#define CODE_T4_VALUE (0x3AULL << 27)
#define CODE_T4_SHIFT 5
#define CODE_T4_SELECTOR (0x03FFFFFULL << CODE_T4_SHIFT)
#define CODE_T5 (0x3FULL << 26)
#define CODE_T5_VALUE (0x3AULL << 26)
#define CODE_T5_SHIFT 4
#define CODE_T5_SELECTOR (0x03FFFFFULL << CODE_T5_SHIFT)
#define CODE_T6 (0x3FULL << 25)
#define CODE_T6_VALUE (0x3AULL << 25)
#define CODE_T6_SHIFT 3
#define CODE_T6_SELECTOR (0x03FFFFFULL << CODE_T6_SHIFT)

#define CODE_NULL 0xFFFFFFFFFFFFFDA8ULL

typedef ViStatus _VI_FUNC (*handle_viOpenDefaultRM) (ViPSession vi);
typedef ViStatus _VI_FUNC (*handle_viOpen) (ViSession sesn, ViRsrc name, ViAccessMode mode,
                                            ViUInt32 timeout, ViPSession vi);
typedef ViStatus _VI_FUNC (*handle_viClose) (ViObject vi);
typedef ViStatus _VI_FUNCC (*handle_viPrintf) (ViSession vi, ViString writeFmt, ...);
typedef ViStatus _VI_FUNC (*handle_viRead) (ViSession vi, ViPBuf buf, ViUInt32 cnt, ViPUInt32 retCnt);

/*
 * Class:     org_usslab_scope_Scope
 * Method:    initialize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_usslab_scope_Scope_initialize
  (JNIEnv *, jobject);

/*
 * Class:     org_usslab_scope_Scope
 * Method:    decode
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_usslab_scope_Scope_decode
  (JNIEnv *, jobject);

/*
 * Class:     org_usslab_scope_Scope
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_usslab_scope_Scope_close
  (JNIEnv *, jobject);

int64_t decode(const uint8_t *const data, const int start, const int size);
uint64_t de_manchester(uint64_t code, uint32_t size, bool check_mode);

#ifdef __cplusplus
}
#endif
#endif
